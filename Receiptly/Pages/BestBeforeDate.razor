@page "/receipt/{id:int}"
@inject NavigationManager Navigation
@inject IReceiptService ReceiptService
@inject IItemService ItemService
<h3>Kvittodetaljer</h3>

@if (receipt == null)
{
    <p>Laddar kvitto...</p>
}
else
{
    <p><b>Butik:</b> @receipt.StoreName</p>
    <p><b>Inköpsdatum:</b> @receipt.PurchaseDate.ToShortDateString()</p>

    <table>
        <thead>
        <tr>
            <th>Artikel</th>
            <th>Kvantitet</th>
            <th>Bäst före</th>
            <th>Uppdatera</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in receipt.Items)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Quantity</td>
                <td>
                    <input type="date" @bind="item.BestBeforeDate" min="@DateTime.Now.ToString("yyyy-MM-dd")" />
                </td>
                <td>
                    <button @onclick="() =>SaveBestBeforeDate(item)">Spara</button>
                </td>
            </tr>
        }
        </tbody>
    </table>

    <button @onclick="GoBack">Tillbaka</button>
}


@code {
    [Parameter]
    public int Id { get; set; }

    private Receipt? receipt;

    protected override void OnInitialized()
    {
        // Get receipt based on Id
        receipt = ReceiptService.GetReceiptById(Id);

    }

    private void SaveBestBeforeDate(Item item)
    {
        try
        {
            ItemService.SaveBestBeforeDate(item);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ett fel inträffade: {ex.Message}");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/receipts");
    }
    
}